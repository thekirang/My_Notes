What is a VPC?
VPC (Virtual Private Cloud) is a logically isolated virtual network within the AWS cloud, dedicated to your AWS account.

It closely resembles a traditional network you might operate in your own data center, but with the scalability and flexibility of AWS.

You control your own IP address ranges, subnets, route tables, and network gateways.

Key Concepts and Components
CIDR Blocks
CIDR (Classless Inter-Domain Routing) block defines the IP address range for your VPC, e.g., 10.0.0.0/16.

You can split this range into smaller segments called subnets.

Subnets
Subnets are segments of your VPC’s IP address range.

Each subnet resides in a single Availability Zone.

Types:

Public Subnet: Connected to the internet via an Internet Gateway.

Private Subnet: Not directly accessible from the internet.

Route Tables
Define how traffic is routed within your VPC.

Each subnet must be associated with a route table.

Routes can direct traffic to subnets, internet gateways, NAT gateways, etc.

Internet Gateway (IGW)
Enables communication between resources in your VPC and the internet.

Required for public subnets to access the internet.

NAT Gateway / NAT Instance
Allows instances in private subnets to initiate outbound traffic to the internet while blocking inbound traffic from the internet.

NAT Gateway is managed by AWS; NAT Instance is self-managed.

Egress-Only Internet Gateway
Used for IPv6 traffic to allow outbound-only access from private subnets to the internet.

VPC Peering
Connects two VPCs, allowing resources in each to communicate privately using private IP addresses.

VPN Connections
Secure, encrypted connections between your VPC and your on-premises network or another VPC over the internet.

Direct Connect
Dedicated, private network connection from your data center to AWS, bypassing the public internet.

Security Groups
Virtual firewalls that control inbound and outbound traffic at the instance level.

Rules can be set based on protocols, ports, and IP addresses.

Network ACLs (NACLs)
Stateless firewalls that control traffic at the subnet level.

Allow or deny traffic based on rules for IP addresses, protocols, and ports.

Elastic IP Addresses (EIPs)
Static, public IPv4 addresses that can be allocated to instances in your VPC for consistent reachability.

VPC Endpoints
Privately connect your VPC to supported AWS services without using an internet gateway, NAT device, VPN, or Direct Connect.

Enhances security and reduces latency.

VPC Features Table
Component	Purpose/Function	Example Use Case
CIDR Block	Defines IP range for VPC	10.0.0.0/16 for internal network allocation
Subnet	Segment VPC by AZ and function (public/private)	Separate web servers (public) and DB (private)
Route Table	Controls traffic routing	Direct traffic from subnet to IGW or NAT
Internet Gateway	Enables internet access for public subnets	Web servers needing internet connectivity
NAT Gateway	Outbound internet for private subnets	App servers downloading updates
Security Group	Instance-level firewall	Allow SSH only from specific IPs
NACL	Subnet-level firewall	Block all inbound traffic except port 80/443
VPC Peering	Private communication between VPCs	Shared services across business units
VPN/Direct Connect	Secure link to on-premises networks	Hybrid cloud architectures
VPC Endpoint	Private AWS service connectivity	S3 access without public internet
VPC Lifecycle: Steps to Create
Plan your IP address range (CIDR).

Create the VPC with the chosen CIDR block.

Add subnets (public/private) across Availability Zones.

Set up route tables and associate with subnets.

Attach an Internet Gateway for public subnets.

Configure NAT Gateway for private subnet internet access.

Set up security groups and NACLs for traffic control.

(Optional) Establish VPC peering, VPN, or Direct Connect as needed.

Additional Features
VPC Flow Logs: Capture and monitor IP traffic for security and troubleshooting.

Traffic Mirroring: Copy network traffic for deep packet inspection.

Default VPC: AWS provides a default VPC in each region for quick resource deployment.

VPC vs. Traditional Private Cloud
Feature	AWS VPC	        Traditional Private Cloud
Infrastructure	        Managed by AWS	Owned by organization
Scalability	        Virtually unlimited, on-demand	Limited by physical hardware
Management	        Automated via AWS Console/CLI/API Manual, requires IT staff
Cost	                Pay-as-you-go Upfront capital and ongoing expenses
Security	        Built-in features (NACLs, SGs, IAM) Organization-defined, may need extra
Geographic Reach	Global AWS regions Limited to data center locations

Summary
AWS VPC is the foundation for secure, scalable, and flexible networking in AWS.

It enables you to architect cloud networks with fine-grained control over connectivity, security, and resource placement.

Mastery of VPC concepts is essential for AWS cloud practitioners.

--------------------------------------------------------------------

SIMPLE STEPS TO CREATE A VPC IN AWS
===================================

1. LOGIN TO AWS CONSOLE
------------------------
- Go to VPC Dashboard → Click on "Create VPC"

2. CREATE VPC
-------------
- Name tag: MyVPC (or any name)
- IPv4 CIDR block: 10.0.0.0/16 (gives 65,536 IPs)
- Leave IPv6 disabled (unless needed)
- Tenancy: Default (shared hardware)
- Click "Create VPC"

3. CREATE SUBNETS
-----------------
- Go to Subnets → Click "Create subnet"
- Choose your VPC (MyVPC)
- Create at least 2 subnets:
  - Public Subnet: 10.0.1.0/24 (for internet-facing services)
  - Private Subnet: 10.0.2.0/24 (for databases)

4. CREATE AND ATTACH INTERNET GATEWAY
-------------------------------------
- Go to Internet Gateways → Click "Create internet gateway"
- Name: MyIGW
- Click "Attach to VPC" → Select your VPC (MyVPC)

5. UPDATE ROUTE TABLE FOR PUBLIC SUBNET
---------------------------------------
- Go to Route Tables
- Find the one associated with your VPC
- Click "Edit routes"
  - Add route: 0.0.0.0/0 → Target: your Internet Gateway
- Click "Edit subnet associations" → Select Public Subnet

6. ENABLE AUTO-ASSIGN PUBLIC IP FOR PUBLIC SUBNET
-------------------------------------------------
- Go to Subnets → Select Public Subnet
- Click "Actions" → "Modify auto-assign IP settings"
- Check: Auto-assign IPv4 public IP

VPC IS READY!
=============
You now have:
- A VPC (10.0.0.0/16)
- A public subnet and private subnet
- An Internet Gateway connected
- A route to the internet for the public subnet

TIPS FOR INTERVIEW
------------------
- Be able to explain each component: VPC, Subnet, Route Table, IGW
- Know the difference between public vs private subnet
- Optionally mention NAT Gateway if asked how private subnets access the internet
"""
---------------------------------------------------------------------------------------------

Step                      Action                                      Key Selection/Association
Create VPC               Define CIDR block                           -
Create Subnet            Select VPC, define subnet CIDR              Associate with VPC
Create Internet Gateway  Create and attach to VPC                    Attach to VPC
Create Route Table       Create for VPC                              -
Associate Route Table    Link to subnet                              Associate with subnet
Edit Route Table         Add 0.0.0.0/0 via Internet Gateway          Select IGW as target for default route



